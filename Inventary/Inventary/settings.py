"""
Django settings for Inventary project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-va#ubpt!q=^64c0&5u7!bh7@)vv1(@%19@_aup+vtbz&jfqz5+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['microservices-tais.epis-dev.site']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',

    'rest_framework',  # Django Rest Framework
    'rest_framework.authtoken',  # Token Authentication
    'dj_rest_auth',  # Django Rest Auth
    'django.contrib.sites',  # Requerido para allauth
    'allauth',  # Para la autenticación de usuarios
    'allauth.account',  # Requerido para la autenticación con nombre de usuario y contraseña

    'users',  # Tu app de usuarios personalizada
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'allauth.account.middleware.AccountMiddleware',  

]
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True


ROOT_URLCONF = 'Inventary.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CSRF_TRUSTED_ORIGINS = [
    'https://microservices-tais.epis-dev.site'
]
CSRF_COOKIE_SECURE = False  
CSRF_USE_SESSIONS = False

WSGI_APPLICATION = 'Inventary.wsgi.application'

# Configuración del modelo de usuario personalizado
AUTH_USER_MODEL = 'users.Usuario'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        # Otras clases de autenticación si las usas, por ejemplo:
        # 'rest_framework.authentication.SessionAuthentication',
    ),
}


# Configuración de Django Allauth
# Usamos solo autenticación por nombre de usuario y contraseña (sin verificación de email)
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Autenticación estándar por nombre de usuario y contraseña
)
REST_AUTH_SERIALIZERS = {
    'LOGIN_SERIALIZER': 'users.serializers.CustomLoginSerializer',
}
# Cambiar el serializer para tokens (si tienes un serializer personalizado)


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# URL para el registro, login, y logout
# Asegúrate de incluir los endpoints de dj-rest-auth en tus urls.py

SITE_ID = 1  # or whatever the ID is of the site you created


# Configuración de la ruta donde se guardarán los archivos media
MEDIA_URL = '/media/'

# Definir la ruta absoluta del sistema de archivos donde se guardarán los archivos media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')